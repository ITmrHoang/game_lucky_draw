Ho√†n to√†n ƒë∆∞·ª£c nh√© ‚úÖ ‚Äî b·∫°n c√≥ th·ªÉ l√†m Lucky Draw b·∫±ng web PHP + JavaScript thu·∫ßn v√† v·∫´n k·∫øt n·ªëi database (MySQL) ƒë·ªÉ l·∫•y th√¥ng tin tr∆∞·ªõc khi quay.

D∆∞·ªõi ƒë√¢y l√† ki·∫øn tr√∫c v√† h∆∞·ªõng d·∫´n chi ti·∫øt ƒë·ªÉ b·∫°n tri·ªÉn khai:

‚öôÔ∏è 1. Ki·∫øn tr√∫c t·ªïng th·ªÉ

Frontend (HTML + CSS + JS):

Hi·ªÉn th·ªã giao di·ªán quay s·ªë (slot ho·∫∑c v√≤ng quay 3D).

G·ª≠i y√™u c·∫ßu ƒë·∫øn PHP backend ƒë·ªÉ l·∫•y danh s√°ch ng∆∞·ªùi ch∆°i, danh s√°ch gi·∫£i th∆∞·ªüng, v√† g·ª≠i k·∫øt qu·∫£ khi quay xong.

C√≥ th·ªÉ d√πng fetch() ƒë·ªÉ giao ti·∫øp qua AJAX.

Backend (PHP):

Truy v·∫•n MySQL ƒë·ªÉ l·∫•y d·ªØ li·ªáu ng∆∞·ªùi tham gia v√† gi·∫£i th∆∞·ªüng (participants, prizes, draws).

Cung c·∫•p API d·∫°ng JSON (v√≠ d·ª• get_participants.php, get_prizes.php, save_result.php).

Qu·∫£n l√Ω logic tr√∫ng gi·∫£i c·ªë ƒë·ªãnh ho·∫∑c random.

Database (MySQL):
G·ª£i √Ω c·∫•u tr√∫c:

CREATE TABLE participants (
  id INT AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(255),
  number VARCHAR(50),
  eligible BOOLEAN DEFAULT 1
);

CREATE TABLE prizes (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255),
  quantity INT DEFAULT 1,
  fixed_winner_id INT NULL,
  FOREIGN KEY (fixed_winner_id) REFERENCES participants(id)
);

CREATE TABLE draws (
  id INT AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(255),
  draw_time DATETIME DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE winners (
  id INT AUTO_INCREMENT PRIMARY KEY,
  draw_id INT,
  prize_id INT,
  participant_id INT,
  FOREIGN KEY (draw_id) REFERENCES draws(id),
  FOREIGN KEY (prize_id) REFERENCES prizes(id),
  FOREIGN KEY (participant_id) REFERENCES participants(id)
);

üíª 2. C√°ch ho·∫°t ƒë·ªông

JS g·ªçi get_participants.php ƒë·ªÉ l·∫•y danh s√°ch ng∆∞·ªùi (tr∆∞·ªõc khi quay).

JS g·ªçi get_prizes.php ƒë·ªÉ l·∫•y danh s√°ch gi·∫£i.

Khi ng∆∞·ªùi d√πng b·∫•m ‚ÄúQuay s·ªë‚Äù, JS:

N·∫øu c√≥ gi·∫£i ƒë·∫∑c bi·ªát ‚Üí l·∫•y ng∆∞·ªùi tr√∫ng ƒë√£ c√†i s·∫µn.

N·∫øu l√† gi·∫£i th∆∞·ªùng ‚Üí random 1 ng∆∞·ªùi trong danh s√°ch.

JS hi·ªÉn th·ªã hi·ªáu ·ª©ng quay s·ªë (slot/3D).

Sau khi quay xong ‚Üí g·ª≠i fetch("save_result.php") ƒë·ªÉ l∆∞u k·∫øt qu·∫£ v√†o DB.

üé® 3. Giao di·ªán quay s·ªë (JS thu·∫ßn)

B·∫°n c√≥ th·ªÉ t·∫°o hi·ªáu ·ª©ng nh∆∞ ·∫£nh (√¥ s·ªë ch·∫°y r·ªìi ch·∫≠m d·∫ßn).
V√≠ d·ª• ƒë∆°n gi·∫£n (slot animation):

<div id="slots">
  <div class="slot">0</div>
  <div class="slot">0</div>
  <div class="slot">0</div>
  <div class="slot">0</div>
</div>

<button id="spinBtn">Quay s·ªë</button>

<style>
  #slots { display: flex; gap: 10px; justify-content: center; margin: 20px; }
  .slot { width: 60px; height: 60px; display: flex; align-items: center; justify-content: center;
          background: #222; color: gold; font-size: 32px; border-radius: 10px; }
</style>

<script>
let spinning = false;

document.getElementById('spinBtn').onclick = async function() {
  if (spinning) return;
  spinning = true;
  
  // G·ªçi API l·∫•y s·ªë tr√∫ng (ho·∫∑c random JS)
  const res = await fetch('api/get_winner.php');
  const { number } = await res.json();
  
  const slots = document.querySelectorAll('.slot');
  let ticks = 0;
  const timer = setInterval(() => {
    slots.forEach(s => s.textContent = Math.floor(Math.random()*10));
    ticks++;
    if (ticks > 40) {
      clearInterval(timer);
      const digits = number.toString().split('');
      slots.forEach((s, i) => s.textContent = digits[i] || '0');
      spinning = false;
    }
  }, 100);
};
</script>



-----------------
üì° 4. PHP API m·∫´u

get_participants.php

<?php
include 'db.php';
$result = $conn->query("SELECT * FROM participants WHERE eligible = 1");
$rows = $result->fetch_all(MYSQLI_ASSOC);
echo json_encode($rows);


get_winner.php

<?php
include 'db.php';
$draw_id = 1; // v√≠ d·ª• l∆∞·ª£t quay hi·ªán t·∫°i

// L·∫•y gi·∫£i hi·ªán t·∫°i
$prize = $conn->query("SELECT * FROM prizes ORDER BY id ASC LIMIT 1")->fetch_assoc();

if ($prize['fixed_winner_id']) {
    $winner = $conn->query("SELECT * FROM participants WHERE id = ".$prize['fixed_winner_id'])->fetch_assoc();
} else {
    $winner = $conn->query("SELECT * FROM participants ORDER BY RAND() LIMIT 1")->fetch_assoc();
}

$conn->query("INSERT INTO winners (draw_id, prize_id, participant_id) VALUES ($draw_id, {$prize['id']}, {$winner['id']})");

echo json_encode([
  'id' => $winner['id'],
  'name' => $winner['name'],
  'number' => $winner['number']
]);